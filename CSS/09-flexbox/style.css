html {
    box-sizing: border-box;
    margin: 0 auto;
}

*,
*::after,
*::before {
    box-sizing: border-box;
}

a {
    font-size: 16px;
    font-family: 'Courier New', Courier, monospace;
    background-color: beige;
    border: groove greenyellow 3px;

}

p {
   font-size: 12px;
   font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
   color: black; 
}

.flex-container {
  display: flex;
  /* flex or flex-direction: row; arranges data horizontally(on the main axis)-->from left to right (rows) */
  /* flex-direction: column; arranges data vertically-->from top to botom (columns) */
}

/* this selector selects all divs inside of .flex-container --> descending combinator */
.flex-container div {
  background: peachpuff;
  border: 4px solid brown;
  height: 100px;
  flex: 1;
}

.container {
    display: flex;
    border:blue solid 4px;
    background-color: aqua;
    padding: 10px;
}

.container div {
    flex: 1;
    margin: 8px;
    height: 60px;
    border: salmon 3px solid;
    background-color: peachpuff;
}

.container .item2 {
    display: flex;
    border: green solid 2px;
    padding: 8px;
    width: inherit;
}

.container .item2 .one1 {
    /* need to use descending combinator to direct nested items */
    margin: 0 5px 0 auto;
    display: inline-block;
    height: 40px;
    width: inherit;
    padding: 5px;
    border: groove green 2px;
}

.container .item2 .two2 {
    margin: 0 0 0 5px;
    display: inline-block;
    height: 40px;
    width: inherit;
    padding: 5px;
    border: double yellow 2px;
}

.flex-container1 {
    border: black solid 10px;
    margin-top: 20px;
    display: flex;
    /* flex-direction: row(default) | column */
    width: 600px;
    height: 300px;
    justify-content: flex-end;
    align-items: flex-end;
    /* justify-content aligns items on the MAIN AXIS (horizontally)
    flex-start (centered left), flex-end (centered right), center, stretch */
    /* align-items aligns items on the CROSS AXIS (vertically)
    flex-start (centered up), flex-end (centered down), center, stretch */
    flex-wrap: wrap;
    /* koristimo kad je vise itema nego stane u container
    pa ih wrap prebaci u novi red */
    align-content: center;
    /* radi samo kod flex-wrap..poravnava wrapane iteme
    po y osi */
    gap: 1em;
    /* razmak imedu wrapanih itema */
}

.flex-container1 .one11 {
    background-color: peachpuff;
    border: 3px salmon solid;
    width: 50px;
    height: 50px;
    flex-grow: 1;
    /* flex-grow rarstegne ovaj item da popuni cijeli kontejner */
    flex-shrink: 0;
    /* kad smanjimo velicinu prozora ovaj item se ne smanjuje */
    /* flex-shrink: 5; smanjuje se 5x brze od ostalih*/
    flex-basis: 200px;
    /* overrrida width ako je postavljeni prije */
    flex: 1 0 200px;
    /* ovaj flex overrida flex-grow: 1; gore */
    /* kombinira flex-grow, flex-shrink, flex-basis */
}
.flex-container1 .two22 {
    background-color: peachpuff;
    border: 3px salmon solid;
    width: 50px;
    height: 50px;
    align-self: center;
    /* targetamo direktno item 2 da overrrida align-item 
    u .container */
}
.flex-container1 .three33 {
    background-color: peachpuff;
    border: 3px salmon solid;
    width: 50px;
    height: 50px;
    order: -1;
    /* mijenja order npr. treceg itema na prvo mjesto
    jer po defaultu svi imaju 0 vrijednost,
    ALI GA NE KORISTIMO JER MIJENJA SEMANTIKU */
}
.flex-container1 .four44 {
    background-color: peachpuff;
    border: 3px salmon solid;
    width: 50px;
    height: 50px;
}


